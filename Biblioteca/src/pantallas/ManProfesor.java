package pantallas;

import bo.ProfeoBo;
import clases.Profesor;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Estudiante
 */
public class ManProfesor extends javax.swing.JFrame {

    private ProfeoBo profeBo;
    private DefaultTableModel modelProfesor;

    public void llenarTabla() {

        this.modelProfesor = new DefaultTableModel() {
            public boolean isCellEditable(int row, int colum) {
                return false;
            }
        };

        this.modelProfesor.setColumnCount(0);//Vamos a trabajar en la columna 0
        this.modelProfesor.addColumn("Cedula");
        this.modelProfesor.addColumn("Nombre");
        this.modelProfesor.addColumn("Salario");
        this.modelProfesor.addColumn("Escuela");

        //Aca llamamos a los datos de la bd con el metodo consultaTodos
        List<Profesor> listaProfesores = this.profeBo.consultaTodos();

        this.modelProfesor.setNumRows(listaProfesores.size());//Metodo size me dice cuantos objetos hay en la lista o elementos

        for (int i = 0; i < listaProfesores.size(); i++) {
            Profesor prof = listaProfesores.get(i); //Hacemos un objeto de tipo profesor para adjuntar los datos a la tabla
            modelProfesor.setValueAt(prof.getCedula(), i, 0);
            modelProfesor.setValueAt(prof.getNombre(), i, 1);
            modelProfesor.setValueAt(prof.getSalario(), i, 2);
            modelProfesor.setValueAt(prof.getEscuela(), i, 3);
        }
        this.tablaProfes.setModel(modelProfesor);
    }

    public DefaultTableModel getModelProfesor() {
        return modelProfesor;
    }

    public void setModelProfesor(DefaultTableModel modelProfesor) {
        this.modelProfesor = modelProfesor;
    }

    public ProfeoBo getProfeBo() {
        return profeBo;
    }

    public void setProfeBo(ProfeoBo profeBo) {
        this.profeBo = profeBo;
    }

    public ManProfesor() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.profeBo = new ProfeoBo();
        this.modelProfesor = new DefaultTableModel();
        this.llenarTabla();//Para que se ejecute de una vez apenas arranca el programa
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        txtEscuela = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtSalario = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtCedula = new javax.swing.JTextField();
        btnEliminar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        btnConsultaCedula = new javax.swing.JButton();
        btnConsultaNombre = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProfes = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Mantenimiento Profesores");
        setBackground(new java.awt.Color(204, 153, 255));
        setMinimumSize(new java.awt.Dimension(556, 340));
        setPreferredSize(new java.awt.Dimension(559, 797));
        getContentPane().setLayout(null);

        jLabel1.setText("Escuela");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(276, 140, 50, 16);

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAgregar);
        btnAgregar.setBounds(50, 210, 93, 29);
        getContentPane().add(txtEscuela);
        txtEscuela.setBounds(350, 140, 140, 30);

        jLabel2.setText("CÃ©dula");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(43, 90, 50, 16);

        jLabel3.setText("Nombre");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(277, 90, 50, 16);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Mantenimiento de Profesores");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(190, 20, 190, 20);

        jLabel5.setText("Salario");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(42, 140, 50, 16);
        getContentPane().add(txtSalario);
        txtSalario.setBounds(110, 140, 140, 30);
        getContentPane().add(txtNombre);
        txtNombre.setBounds(350, 90, 140, 30);
        getContentPane().add(txtCedula);
        txtCedula.setBounds(110, 90, 140, 30);

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminar);
        btnEliminar.setBounds(160, 210, 95, 29);

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });
        getContentPane().add(btnModificar);
        btnModificar.setBounds(330, 210, 80, 29);

        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        getContentPane().add(btnLimpiar);
        btnLimpiar.setBounds(440, 210, 73, 29);

        btnConsultaCedula.setText("Consulta por cedula");
        getContentPane().add(btnConsultaCedula);
        btnConsultaCedula.setBounds(70, 260, 140, 29);

        btnConsultaNombre.setText("Consulta por nombre");
        getContentPane().add(btnConsultaNombre);
        btnConsultaNombre.setBounds(340, 260, 160, 29);

        tablaProfes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tablaProfes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaProfesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaProfes);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(60, 320, 454, 404);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:        
        if (validarDatos()) {
            Profesor profe = new Profesor();

            profe.setCedula(Integer.parseInt(txtCedula.getText()));
            profe.setNombre(txtNombre.getText());
            profe.setSalario(Double.parseDouble(txtSalario.getText()));
            profe.setEscuela(txtEscuela.getText());

            int respuestaNumero = profeBo.insertar(profe);

            switch (respuestaNumero) {
                case 0:
                    JOptionPane.showMessageDialog(null, "Se guardo correctamente");
                    break;
                case 1:
                    JOptionPane.showMessageDialog(null, "No se guardo el registro correctamente");
                    break;
                case 2:
                    JOptionPane.showMessageDialog(null, "Ya existe este profesor");
                    break;
                case 3:
                    JOptionPane.showMessageDialog(null, "Ocurrio un error inesperado");
                    break;
            }
        }
        limpiar();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        if (txtCedula.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Digite la cedula del profesor.");

        } else {

            try {
                int num = Integer.parseInt(txtCedula.getText());

                Profesor profesor = new Profesor();
                profesor.setCedula(num);

                int resultadoNumero = profeBo.eliminar(profesor);

                switch (resultadoNumero) {
                    case 0:
                        JOptionPane.showMessageDialog(null, "No se pudo eliminar el registro");
                        break;
                    case 1:
                        JOptionPane.showMessageDialog(null, "Se elimino el registro correctamente");
                        break;
                    case 2:
                        JOptionPane.showMessageDialog(null, "No se pudo conectar a la Base de Datos");
                        break;
                    case 3:
                        JOptionPane.showMessageDialog(null, "Ocurrio un error inesperado");
                        break;
                }
                limpiar();

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Digite solamente numeros.");
            }
        }


    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void tablaProfesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaProfesMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount() == 2){
            int fila = tablaProfes.getSelectedRow();
            txtCedula.setText(tablaProfes.getValueAt(fila, 0).toString());
            txtNombre.setText(tablaProfes.getValueAt(fila, 1).toString());
            txtSalario.setText(tablaProfes.getValueAt(fila, 2).toString());
            txtEscuela.setText(tablaProfes.getValueAt(fila, 3).toString());
            txtCedula.setEnabled(false);
        }
    }//GEN-LAST:event_tablaProfesMouseClicked

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        // TODO add your handling code here:
        if (validarDatos()) {
            Profesor profe = new Profesor();

            profe.setCedula(Integer.parseInt(txtCedula.getText()));
            profe.setNombre(txtNombre.getText());
            profe.setSalario(Double.parseDouble(txtSalario.getText()));
            profe.setEscuela(txtEscuela.getText());

            int respuestaNumero = profeBo.modificar(profe);

            switch (respuestaNumero) {
                case 0:
                    JOptionPane.showMessageDialog(null, "Se modifico correctamente");
                    break;
                case 1:
                    JOptionPane.showMessageDialog(null, "No se modifico el registro correctamente");
                    break;             
                case 2:
                    JOptionPane.showMessageDialog(null, "Ocurrio un error inesperado");
                    break;
            }
        }
        limpiar();
    }//GEN-LAST:event_btnModificarActionPerformed

    public Boolean validarDatos() {
        boolean bandera = true;

        //if(this.txtCedula.gettext().trim().length==0)
        if (txtCedula.getText().trim().equals("")) {
            bandera = false;
            JOptionPane.showMessageDialog(null, "Digite la cedula del profesor");
        } else {
            try {
                int num = Integer.parseInt(txtCedula.getText());
            } catch (NumberFormatException e) {
                bandera = false;
                JOptionPane.showMessageDialog(null, "Solo se permiten nÃºmeros en la cedula");
            }
        }

        if (txtNombre.getText().trim().equals("")) {
            bandera = false;
            JOptionPane.showMessageDialog(null, "Digite el nombre del profesor");
        }

        if (txtSalario.getText().trim().equals("")) {
            bandera = false;
            JOptionPane.showMessageDialog(null, "Digite el salario del profesor");
        } else {
            try {
                Double num = Double.parseDouble(txtCedula.getText());
            } catch (NumberFormatException e) {
                bandera = false;
                JOptionPane.showMessageDialog(null, "Solo se permiten nÃºmeros");
            }
        }

        if (txtEscuela.getText().trim().equals("")) {
            bandera = false;
            JOptionPane.showMessageDialog(null, "Digite el nombre de la escuela");
        }

        return bandera;
    }

    public void limpiar() {
        txtCedula.setText("");
        txtNombre.setText("");
        txtSalario.setText("");
        txtEscuela.setText("");
        llenarTabla();
        txtCedula.setEnabled(true);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManProfesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManProfesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManProfesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManProfesor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManProfesor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnConsultaCedula;
    private javax.swing.JButton btnConsultaNombre;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaProfes;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtEscuela;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtSalario;
    // End of variables declaration//GEN-END:variables
}
