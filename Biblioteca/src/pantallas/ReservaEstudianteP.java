package pantallas;

import bo.EstudianteBo;
import bo.LibroBo;
import bo.ReservaEstudianteBo;
import clases.Estudiante;
import clases.Libro;
import clases.ReservaEstudiante;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author anyelacristinadaza
 */
public class ReservaEstudianteP extends javax.swing.JFrame {

    private DefaultTableModel tablaModelo;
    private EstudianteBo estudianteBo;
    private LibroBo libroBo;
    private ReservaEstudianteBo reservaEstudianteBo;

    public ReservaEstudianteP() {
        initComponents();
        tablaModelo = new DefaultTableModel();
        libroBo = new LibroBo();
        estudianteBo = new EstudianteBo();
        reservaEstudianteBo = new ReservaEstudianteBo();
        cargarEstudiante();
        cargarLibros();
        llenarTabla();
    }

    private void llenarTabla() {

        tablaModelo.setColumnCount(0);

        tablaModelo.addColumn("cedula");
        tablaModelo.addColumn("codigo");
        tablaModelo.addColumn("dias");
        tablaModelo.addColumn("fecha");

        List<ReservaEstudiante> listaReservaEstudiante = reservaEstudianteBo.consultaTodos();

        tablaModelo.setNumRows(listaReservaEstudiante.size());

        for (int i = 0; i < listaReservaEstudiante.size(); i++) {
            ReservaEstudiante reservaEstudiane = listaReservaEstudiante.get(i);
            Estudiante estudiante = estudianteBo.consultaCedula(reservaEstudiane.getCedula());
            Libro libro = libroBo.consultaCodigo(reservaEstudiane.getCodigo());
            tablaModelo.setValueAt(estudiante.getNombre(), i, 0);
            tablaModelo.setValueAt(libro.getNombre(), i, 1);
            tablaModelo.setValueAt(reservaEstudiane.getDias(), i, 2);
            tablaModelo.setValueAt(reservaEstudiane.getFechaReserva(), i, 3);
        }
        tablaReservacionEstudiante.setModel(tablaModelo);
    }

    private boolean validarDatos() {
        boolean bandera = true;
        if (cbEstudiantes.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Seleccione un profesor por favor");
            bandera = false;
        }

        if (cbLibros.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(null, "Seleccione un libro por favor");
            bandera = false;
        }
        return bandera;
    }

    private void cargarEstudiante() {

        List<Estudiante> listaEstudiantes = estudianteBo.consultaTodos();
        cbEstudiantes.addItem("Seleccione");

        for (int i = 0; i < listaEstudiantes.size(); i++) {
            Estudiante estudiante = listaEstudiantes.get(i);
            cbEstudiantes.addItem(estudiante.getCedula() + " - " + estudiante.getNombre());
        }
    }

    private void cargarLibros() {

        List<Libro> listaLibros = libroBo.consultaTodos();
        cbLibros.addItem("Seleccione");

        for (int i = 0; i < listaLibros.size(); i++) {
            Libro libro = listaLibros.get(i);
            cbLibros.addItem(libro.getCodigo() + " - " + libro.getNombre());
        }
    }

    public void limpiar() {
        cbEstudiantes.setSelectedIndex(0);
        cbLibros.setSelectedIndex(0);
        spinnDias.setValue(1);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaReservacionEstudiante = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cbEstudiantes = new javax.swing.JComboBox<>();
        cbLibros = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        spinnDias = new javax.swing.JSpinner();
        btnReservacion = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tablaReservacionEstudiante.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tablaReservacionEstudiante);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Reserva de Estudiante");

        jLabel2.setText("Estudiante");

        jLabel3.setText("Libro");

        jLabel4.setText("Días de préstamo");

        spinnDias.setModel(new javax.swing.SpinnerNumberModel(1, 1, 10, 1));

        btnReservacion.setText("Crear Reservación");
        btnReservacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReservacionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnReservacion)
                        .addGap(114, 114, 114))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbLibros, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbEstudiantes, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(spinnDias, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbEstudiantes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cbLibros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(spinnDias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(53, 53, 53)
                .addComponent(btnReservacion)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(39, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnReservacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReservacionActionPerformed
        if (validarDatos()) {
            ReservaEstudiante reservaEstudiante = new ReservaEstudiante();

            String cadenaEstudiante = String.valueOf(cbEstudiantes.getSelectedItem());
            String[] arrayEstudiante = cadenaEstudiante.split("-");

            String cadenaLibro = String.valueOf(cbLibros.getSelectedItem());
            String[] arrayLibro = cadenaLibro.split("-");

            reservaEstudiante.setCedula(Integer.parseInt(arrayEstudiante[0].trim()));
            reservaEstudiante.setCodigo(Integer.parseInt(arrayLibro[0].trim()));
            reservaEstudiante.setDias((Integer) spinnDias.getValue());
            reservaEstudiante.setFechaReserva(new Date());

            int respuesta = reservaEstudianteBo.insertar(reservaEstudiante);

            switch (respuesta) {
                case 0:
                    JOptionPane.showMessageDialog(null, "Se guardo la reserva correctamente");
                    break;
                case 1:
                    JOptionPane.showMessageDialog(null, "No se conecto a la BD");
                    break;
                case 2:
                    JOptionPane.showMessageDialog(null, "La reserva ya existe");
                    break;
                case 3:
                    JOptionPane.showMessageDialog(null, "Ocurrio un error inesperado");
                    break;
            }
        }
        llenarTabla();
        limpiar();
    }//GEN-LAST:event_btnReservacionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReservaEstudianteP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReservaEstudianteP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReservaEstudianteP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReservaEstudianteP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReservaEstudianteP().setVisible(true);
            }
        });
    }

    public DefaultTableModel getTablaModelo() {
        return tablaModelo;
    }

    public void setTablaModelo(DefaultTableModel tablaModelo) {
        this.tablaModelo = tablaModelo;
    }

    public EstudianteBo getEstudianteBo() {
        return estudianteBo;
    }

    public void setEstudianteBo(EstudianteBo estudianteBo) {
        this.estudianteBo = estudianteBo;
    }

    public LibroBo getLibroBo() {
        return libroBo;
    }

    public void setLibroBo(LibroBo libroBo) {
        this.libroBo = libroBo;
    }

    public ReservaEstudianteBo getReservaEstudianteBo() {
        return reservaEstudianteBo;
    }

    public void setReservaEstudianteBo(ReservaEstudianteBo reservaEstudianteBo) {
        this.reservaEstudianteBo = reservaEstudianteBo;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReservacion;
    private javax.swing.JComboBox<String> cbEstudiantes;
    private javax.swing.JComboBox<String> cbLibros;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner spinnDias;
    private javax.swing.JTable tablaReservacionEstudiante;
    // End of variables declaration//GEN-END:variables
}
